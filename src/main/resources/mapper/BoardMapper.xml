<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.gyemoim.mapper.BoardMapper">

    <!--     게시글 Read -->
    <!--     게시글 총 갯수 구하기 -->
    <select id="countBoard" resultType="int">
        SELECT COUNT(*)
        FROM BOARD
    </select>

    <!-- 게시글 목록 가져오기 -->
    <select id="selectBoard" resultType="com.team.gyemoim.vo.BoardVO">
        SELECT *
        FROM BOARD
    </select>

    <!-- 검색 후 페이징 된 게시글 갯수 구하기 -->
    <select id="searchCountBoard" parameterType="com.team.gyemoim.vo.PageVO" resultType="int">
        SELECT COUNT(*)
        FROM BOARD
        WHERE title LIKE '%' || #{searchKeyword} || '%'
           OR content LIKE '%' || #{searchKeyword} || '%'
           OR name = #{searchKeyword}
    </select>


    <!-- 게시글 리스트 조회하기 (검색 O & 게시글 타입에 따라 조회) -->
    <select id="searchList" parameterType="com.team.gyemoim.dto.board.BoardListDTO"
            resultType="com.team.gyemoim.vo.BoardVO">
        SELECT *
        FROM BOARD
        WHERE type = #{type}
        <if test="searchType != ''  and searchKeyword != '' ">
            <if test="searchType == 'title'">
                AND title LIKE '%' || #{searchKeyword} || '%'
            </if>
            <if test="searchType == 'content'">
                AND content LIKE '%' || #{searchKeyword} || '%'
            </if>
            <if test="searchType == 'name'">
                AND name LIKE '%' || #{searchKeyword} || '%'
            </if>
        </if>
        ORDER BY writeDate
    </select>


    <!-- 특정 게시글 상세보기 -->
    <select id="readDetail" resultType="com.team.gyemoim.vo.BoardVO">
        SELECT *
        FROM BOARD
        WHERE BID = #{bid}
    </select>


    <!-- 게시글 조회수 레코드 생성 (mysql)
    <insert id="createBoardRecordCountHistory" parameterType="com.team.gyemoim.dto.board.BoardReadCountDTO">
        INSERT INTO read_history (bid, uNo, latest_access_at)
        values (#{boardBid}, #{readerUNo}, sysdate) ON DUPLICATE KEY
        UPDATE latest_access_at=SYSDATE;
    </insert> -->

    <!-- 게시글 조회수 레코드 생성 (Oracle)
     'MERGE' 문 사용하여 존재하는 레코드 업데이트하거나, 존재하지 않는 경우 새로운 레코드 삽입하기 -->
    <!--<insert id="createBoardRecordCountHistory" parameterType="com.team.gyemoim.dto.board.BoardReadCountDTO">
        MERGE INTO read_history rh
            USING DUAL ON (rh.bid = #{boardBid} AND rh.uNo = #{readerUno})
            WHEN MATCHED THEN
                UPDATE SET rh.latest_access_at = SYSDATE
            WHEN NOT MATCHED THEN
                INSERT INTO read_history (bid, uNo, latest_access_at)
                VALUES (#{boardBid}, #{readerUno}, SYSDATE);
    </insert>-->


    <!-- 게시글 조회수 수정 -->
    <update id="updateViewCnt">
        UPDATE BOARD
        SET views = views + 1
        WHERE bid = #{bid}
    </update>


    <!-- 게시글 Create -->
    <!-- 글 작성하기 -->
    <insert id="insert" parameterType="com.team.gyemoim.dto.board.BoardWriteDTO">
        INSERT INTO board (bid, uNo, name, type, title, views, content, writeDate, secret)
        VALUES (BID_BOA_SEQ.NEXTVAL, #{uno}, #{name}, #{type}, #{title}, 0, #{content}, sysdate, #{secret})
    </insert>


    <!-- 첨부파일 작성하기
    &lt;!&ndash; attachedID 및 bid 필드에 대해 시퀀스 값을 조회하고, 이를 사용하여 해당 필드에 값을 할당한다. &ndash;&gt;
    <insert id="saveAttached" parameterType="com.team.gyemoim.vo.AttachedVO">
        <selectKey keyProperty="attachedID" resultType="int" order="BEFORE">
            SELECT ATTACHEDID_ATTACHED_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        <selectKey keyProperty="bid" resultType="int" order="BEFORE">
            SELECT BID_BID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO Attached (attachedID, bid, filename, fileSize, fileType, filePath, uploadDate, modifyDate)
        VALUES (ATTACHEDID_ATTACHED_SEQ.NEXTVAL, BID_BOA_SEQ.NEXTVAL, #{fileName}, #{fileSize}, #{fileType},
        #{filePath}, systimestamp, sistimestamp)
    </insert>-->


    <!-- 게시글 Update -->
    <!-- 수정 전 원래 글 세부내용 가져오기 -->
    <select id="modify" resultType="com.team.gyemoim.vo.BoardVO" parameterType="int">
        SELECT *
        FROM BOARD
        WHERE bid = #{bid}
    </select>

    <!--  아직안씀  -->
    <!-- 수정 전 게시글에 있는 기존 첨부파일 가져오기 -->
    <!--    <select id="attached" resultType="com.team.gyemoim.vo.AttachedVO">-->
    <!--        SELECT *-->
    <!--        FROM ATTACEHD-->
    <!--        WHERE bid = #{bid}-->
    <!--    </select>-->

    <!-- 특정 bid 에 해당하는 게시글 수정하기 -->
    <update id="modifyUpdate" parameterType="com.team.gyemoim.dto.board.BoardModifyDTO">
        UPDATE BOARD
        SET uNo     = #{uNo},
            name    = #{name},
            title   = #{title},
            content = #{content},
            secret  = #{secret}
        WHERE bid = #{bid}
    </update>

    <!-- 특정 bid 에 해당하는 게시글에 있는 첨부파일 수정하기 -->
    <update id="addAttachedUpdate">
        UPDATE ATTACHED
        SET fileName = #{fileName}
        WHERE bid = #{bid}
    </update>


    <!-- 게시글 Delete -->
    <!-- 특정 bid 와 글 작성자 uNo에 해당하는 게시글 삭제하기 -->
    <delete id="delete" parameterType="com.team.gyemoim.dto.board.BoardDeleteDTO">
        DELETE
        FROM BOARD
        WHERE bid = #{bid}
          AND uNo = #{uNo}
    </delete>


    <!-- 첨부파일 -->
    <!-- 첨부파일 생성 Create -->
    <insert id="saveAttached" parameterType="com.team.gyemoim.vo.AttachedVO">
        INSERT INTO Attached (attachedID, bid, fileName, fileSize, fileType, filePath, uploadDate, modifyDate)
        VALUES (ATTACHEDID_ATTACHED_SEQ.NEXTVAL, #{bid}, #{fileName}, #{fileSize}, #{fileType},
                #{filePath}, SYSTIMESTAMP, SYSTIMESTAMP)
    </insert>

    <!-- 첨부파일 상세보기 Read -->
    <select id="getAttachedById" parameterType="int" resultType="com.team.gyemoim.vo.AttachedVO">
        SELECT *
        FROM Attached
        WHERE attachedID = #{attachedID}
    </select>

    <!-- 첨부파일 수정 Update -->
    <update id="updateAttached" parameterType="com.team.gyemoim.vo.AttachedVO">
        UPDATE Attached
        SET fileName   = #{fileName},
            fileSize   = #{fileSize},
            fileType   = #{fileType},
            filePath   = #{filePath},
            modifyDate = SYSTIMESTAMP
        WHERE attachedID = #{attachedID}
    </update>

    <!-- 첨부파일 삭제 Delete -->
    <delete id="deleteAttached" parameterType="int">
        DELETE
        FROM Attached
        WHERE attachedID = #{attachedID}
    </delete>

</mapper>


